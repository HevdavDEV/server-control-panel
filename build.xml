<project name="WPN-XM Server Control Panel" default="main" basedir=".">

    <!--
            WPN-XM Server Control Panel - Build Properties
    -->

    <!-- Version -->
    <property name="version.Major"          value="0"/>
    <property name="version.Minor"          value="8"/>
    <property name="version.Patch"          value="2"/>
    <property name="version.PreRelease"     value=""/> <!-- alpha, beta, rc -->
    <property name="version.BuildMetadata"  value=""/> <!-- auto -->

    <!-- Version Tokens used in /src/version.h -->
    <property name="Version"                value="${version.Major}.${version.Minor}.${version.Patch}${version.PreRelease}"/>
    <property name="VersionForRcFile"       value="${version.Major},${version.Minor},${version.Patch},0"/>

    <!-- Fetch the Git Revision {version.GitRevision} and re-assign it to the version token properties -->
    <available file=".git" type="dir" property="git.present"/>
	<target name="getGitRevision" description="Store git revision in ${version.GitRevision}" if="git.present">
	    <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
	        <arg value="describe"/>
	        <arg value="--always"/>
	        <arg value="HEAD"/>
	    </exec>
	    <condition property="version.GitRevision" value="${git.revision}" else="unknown">
	        <and>
	            <isset property="git.revision"/>
	            <length string="${git.revision}" trim="yes" length="0" when="greater"/>
	        </and>
	    </condition>
        <!-- re-assign properties -->
        <propertyappend name="Version"             value="${Version}+${version.GitRevision}"/>
        <echo>The git revision is ${version.GitRevision}.</echo>
	</target>

    <scriptdef name="propertyappend" language="javascript" description="Allows to assign @{property} new value">
        <attribute name="name"/>
        <attribute name="value"/>
            project.setProperty(attributes.get("name"), attributes.get("value"));
    </scriptdef>

    <property name="basedir"            value="${project.basedir}" />

    <!--
            Set properties based on OS
    -->

    <target name="init-properties" description="set properties based on OS">
        <condition property="isUnix"><os family="unix" /></condition>
        <condition property="isWindows"><os family="windows" /></condition>
        <antcall target="setUnixEnv" />
        <antcall target="setWindowsEnv" />
    </target>

    <target name="setUnixEnv" if="isUnix">
        <echo>Setting properties for a Unix machine.</echo>
        <!-- <property file="unix.properties" />-->
    </target>

    <target name="setWindowsEnv" if="isWindows">
        <echo>Setting properties for a Windows machine.</echo>
        <!-- <property file="unix.properties" />-->
        <property name="dir.qmake"   value="D:\Qt\Qt5.2.0\5.2.0-rc1\mingw48_32\bin"/>
        <property name="dir.mingw32" value="D:\Qt\Qt5.2.0\Tools\mingw48_32\bin\"/>
    </target>

	<!--
            WPN-XM Server Control Panel - Build Tasks
    -->

    <target name="print-version-number" depends="getGitRevision">
        <echo message="Building WPN-XM Server Control Panel ${Version}"/>
    </target>

    <target name="bump-version-number" description="Inserts the current version number into version.h.">
        <loadfile srcFile="${basedir}/src/version.h" property="filecontent.scp.version.h">
            <filterchain>
                <replacetokens>
                    <token key="APPVERSION" value="${Version}"/>
                    <token key="APPVERSIONRC" value="${VersionForRcFile}"/>
                </replacetokens>
            </filterchain>
        </loadfile>
        <delete file="${basedir}/src/version.h"/>
        <echo file="${basedir}/src/version.h">${filecontent.scp.version.h}</echo>
    </target>

    <target name="clean-build-dir" description="Mr. Proper cleans the build environment and recreates it.">
        <!-- clean -->
        <delete dir="${basedir}/deploy"/>
        <delete dir="${basedir}/deploy/imageformats"/>
        <delete dir="${basedir}/deploy/platforms"/>
        <!-- mkdir -->
        <mkdir dir="${basedir}/deploy"/>
        <mkdir dir="${basedir}/deploy/imageformats"/>
        <mkdir dir="${basedir}/deploy/platforms"/>
    </target>

    <target name="package" description="zip the deployment folder to deploy/wpnxm-scp-1.2.3.zip">
        <echo message="Building zip archive of Server-Control-Panel for distribution."/>
        <zip zipfile="${basedir}/deploy/wpnxm-scp-${wpnxm.Version}.zip" ziplevel="9">
            <fileset dir="${basedir}/deploy/">
                <include name="**/*" />
            </fileset>
        </zip>
    </target>

    <target name="compile-server-control-panel"
            description="Compiles the Server Control Panel Tray Application via Qt Framework and it's build tools."
            depends="bump-version-number">
            <!-- This tasks requires that you have installed Qt and setup all environment path vars correctly.
                 The build tools will not be found otherwise. -->

        <exec command="qmake v" dir="${dir.qmake}"/>

        <echo message="QMAKE Query"/>
        <exec command="qmake -query" dir="${dir.qmake}" passthru="true"/>
        <echo message="Clean Server-Control-Panel folder"/>
        <!-- remove files, ignores and folders. you might add "n" for dry-run -->
        <exec command="git clean -fxd" dir="${basedir}/server-control-panel/" passthru="true"/>

        <!-- http://doc-snapshot.qt-project.org/4.8/qmake-variable-reference.html -->
        <exec command="${dir.qmake}\qmake" dir="${basedir}/server-control-panel/" passthru="true">
        	<arg value=" -r -spec win32-g++ -o Makefile ${basedir}/server-control-panel/wpnxm-servercontrolpanel.pro -Wall"/>
    	</exec>

        <exec command="${dir.mingw32}\mingw32-make -v" passthru="true"/>

        <exec command="${dir.mingw32}\mingw32-make -f Makefile.Release -j4" dir="${basedir}/server-control-panel/" passthru="true">
			<environment>
				<variable name="PATH" value="${dir.mingw32}"/>
			</environment>
        </exec>

        <echo message="Copy runtime dependencies of Qt"/>
        <exec command="${dir.mingw32}\mingw32-make install" dir="${basedir}/server-control-panel/" passthru="true"/>

        <echo message="Cleaning build directory"/>
        <exec command="${dir.mingw32}\mingw32-make clean" dir="${basedir}/server-control-panel/" passthru="true"/>

        <echo message="Removing all unneeded debugging symbols and sections from executable..."/>
        <exec command="${dir.mingw32}\strip.exe -s wpn-xm.exe -o wpn-xm.exe.stripped" dir="${basedir}/server-control-panel/build/release/" passthru="true"/>
        <sleep seconds="3"/>
        <exec command="cmd.exe /c move wpn-xm.exe.stripped wpn-xm.exe" dir="${basedir}/server-control-panel/build/release/" passthru="true"/>

        <echo message="Compressing executable..."/>
        <exec command="${basedir}/bin/upx/upx -9 ${basedir}/server-control-panel/build/release/*.exe" level="verbose" passthru="true"/>

    </target>

    <target name="main" depends="init-properties, print-version-number, bump-version-number"></target>

</project>