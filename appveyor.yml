# See http://www.appveyor.com/docs/appveyor-yml

version: '{build}'

# Branches to build
branches:
  only: 
    - master

configuration: 
  - release 
  #- debug

environment:
  MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
  matrix:
    # MinGW 32bit
    - QTDIR: C:\Qt\5.6\mingw49_32
      SPEC: win32-g++
      MAKE: mingw32-make
      ARTIFACT: $(APPVEYOR_PROJECT_NAME)-%APPVEYOR_REPO_TAG_NAME%-win32-mingw.zip
     # Microsoft Visual Studio 64bit
    - QTDIR: C:\Qt\5.6\msvc2015_64
      CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
      VSVER: 14.0
      SPEC: win32-msvc2015
      MAKE: nmake
      #ARTIFACT: $(APPVEYOR_PROJECT_NAME)-%APPVEYOR_REPO_TAG_NAME%.%APPVEYOR_BUILD_NUMBER%-win64.zip
      ARTIFACT: $(APPVEYOR_PROJECT_NAME)-%APPVEYOR_REPO_TAG_NAME%-win64-msvc2015.zip
      #GENERATOR: "Visual Studio 14 2015 Win64"
    # Microsoft Visual Studio 32bit
    - QTDIR: C:\Qt\5.6\msvc2015
      CMAKE_GENERATOR: "Visual Studio 14 2015"
      VSVER: 14.0
      SPEC: win32-msvc2015
      MAKE: nmake
      ARTIFACT: $(APPVEYOR_PROJECT_NAME)-%APPVEYOR_BUILD_VERSION%_win32-msvc2015.zip


matrix:
  fast_finish: true

# scripts that are called at very beginning, before repo cloning
init:
  - date /T & time /T
  - git config --global core.autocrlf input
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }

shallow_clone: true

before_build:
  # set QT path and env variables
  - call "%QTDIR%\bin\qtenv2.bat"
  - set Path=%QTDIR%\bin;%Path%
  # show qmake and make version
  - qmake -v
  - if %MAKE%==mingw32-make call %MAKE% -v
  # detect architecture (32bit or 64bit)
  - if %QTDIR:_64=%==%QTDIR% (set ARCH=x86) else (set ARCH=x64)
  # Set more... if Microsoft Visual Studio
  - if %MAKE%==nmake call "%ProgramFiles(x86)%\Microsoft Visual Studio %VSVER%\VC\vcvarsall.bat" %ARCH%
  # Show build folder
  - echo %APPVEYOR_BUILD_FOLDER%
  - echo %CONFIGURATION%

build_script:
  #- if "%APPVEYOR_REPO_TAG%"=="true" (set CONFIGURATION=Release) else (set CONFIGURATION=Debug)
  - cd %APPVEYOR_BUILD_FOLDER%
  # build dependencies  
  - if %MAKE%==mingw32-make call build-dependencies-mingw.bat
  - if %MAKE%==nmake call build-dependencies-msvc.bat
  # run qmake
  - qmake wpnxm-servercontrolpanel.pro -r -spec %SPEC% "CONFIG+=%CONFIGURATION%"
  # Run make
  - call %MAKE%

after_build:
  - echo %cd%
  - dir %APPVEYOR_BUILD_FOLDER% /s
  - cd %APPVEYOR_BUILD_FOLDER%\%CONFIGURATION%
  - dir
  # identify and copy dependencies
  - windeployqt.exe --no-system-d3d-compiler --no-angle --no-opengl --no-translations --%CONFIGURATION% wpn-xm.exe
  - xcopy /Y /s %APPVEYOR_BUILD_FOLDER%\libs .
  # cleanups
  - del *.obj
  - del *.o
  - del *.cpp
  - del *.a
  # package
  - 7z a wpnxm-scp-%APPVEYOR_BUILD_VERSION%-%ARCH%.zip .
  # deploy
  - appveyor PushArtifact wpnxm-scp-%APPVEYOR_BUILD_VERSION%-%ARCH%.zip

test_script:
  - cd %APPVEYOR_BUILD_FOLDER%\%CONFIGURATION%
  - wpn-xm.exe -v

#artifacts:
#- path: build/scp-*.7z

#deploy:
#  provider: GitHub
#  auth_token:
#    secure: ---------------------
#  artifact: /.*\.7z/
#  on:
#    appveyor_repo_tag: true