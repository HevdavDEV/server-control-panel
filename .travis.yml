#
# .travis.yml - configuration file for the travis continuous integration service
#
# see http://about.travis-ci.org/docs/user/languages/cpp for more hints
#
language: cpp

cache:
  apt: true

matrix:
  fast_finish: true
  include:
    # cross-compile using mingw
    - compiler: ": w64"
      env: PLATFORM="mingw32" ARCH="x86_64" BITSIZE=64 HOST="x86_64"
    - compiler: ": w32"
      env: PLATFORM="mingw32" ARCH="x86" BITSIZE=32 HOST="i686"

install:
  # < Trusty
  - sudo add-apt-repository "deb mirror://mirrors.ubuntu.com/mirrors.txt trusty main restricted universe multiverse" -y
  - sudo apt-get update -qq
  # < NUM_CPU (for make jobs)
  - export NUM_CPU="`grep processor /proc/cpuinfo | wc -l`"; echo $NUM_CPU
  # < 7zip
  #- sudo apt-get install p7zip-full
  # < Qt from mingw-builds
  #- if [ $BITSIZE == 32 ]; then sudo wget -O qt.zip http://sourceforge.net/projects/mingwbuilds/files/external-binary-packages/Qt-Builds/x32-Qt-5.2.1%2BQtCreator-3.0.1-%28gcc-4.8.2-dwarf%29.7z/download; fi
  #- if [ $BITSIZE == 64 ]; then sudo wget -O qt.zip http://sourceforge.net/projects/mingwbuilds/files/external-binary-packages/Qt-Builds/x64-Qt-5.2.1%2BQtCreator-3.0.1-%28gcc-4.8.2-seh%29.7z/download; fi
  # < Qt from win-builds
  - if [ $BITSIZE == 32 ]; then sudo wget -O qt.txz http://win-builds.org/1.5.0/packages/windows_32/qt-5.3.1-4-i686-w64-mingw32.txz; fi
  - if [ $BITSIZE == 64 ]; then sudo wget -O qt.txz http://win-builds.org/1.5.0/packages/windows_64/qt-5.3.1-4-x86_64-w64-mingw32.txz; fi
  # unzip Qt to /opt/qt5 and set path variable
  - sudo mkdir /opt/qt5/
  - sudo tar xfp qt.txz -C /opt/qt5
  - sudo ls -alh /opt/qt5/windows_$BITSIZE/*
  #- sudo 7z x qt.zip -o/opt/qt5 -y > /dev/null
  #- sudo ls /opt/qt5/QtSDK-$HOST
  # set Qt Paths, QtSDK-{x86_64|i686}
  - uname -m
  #- export QTDIR=/opt/qt5/QtSDK-$HOST
  - export QTDIR=/opt/qt5/windows_$BITSIZE
  - export PATH=$QTDIR/bin:$PATH
  - if [ $BITSIZE == 32 ]; then export LD_LIBRARY_PATH=$QTDIR/lib/:$QTDIR/lib/`uname -m`-linux-gnu:$LD_LIBRARY_PATH; export PKG_CONFIG_LIBDIR=$QTDIR/lib/pkgconfig; export QMAKE_LIB_DIR=$QTDIR/lib; fi
  - if [ $BITSIZE == 64 ]; then export LD_LIBRARY_PATH=$QTDIR/lib64/:$QTDIR/lib64/`uname -m`-linux-gnu:$LD_LIBRARY_PATH; export PKG_CONFIG_LIBDIR=$QTDIR/lib64/pkgconfig; export QMAKE_LIB_DIR=$QTDIR/lib64; fi
  - export PATH=$QMAKE_LIB_DIR:$PATH
  # < MinGW
  - sudo add-apt-repository --yes ppa:tobydox/mingw-x-precise
  - sudo apt-get update -qq
  - sudo apt-get install -y cloog-isl mingw32
  #qt5-default qtbase5-dev libqt5gui5 libqt5printsupport5 libqt5widgets5 libpango-1.0-0
  - if [ $BITSIZE == 32 ]; then sudo apt-get install -y mingw32-x-binutils mingw32-x-gcc mingw32-x-runtime; fi
  - if [ $BITSIZE == 64 ]; then sudo apt-get install -y mingw64-x-binutils mingw64-x-gcc mingw64-x-runtime; fi
  - export MINGW=/opt/mingw$BITSIZE
  - export PATH=$MINGW/bin:$PATH
  - export CC=$HOST-w64-mingw32-gcc
  - export CXX=$HOST-w64-mingw32-g++

script:
  - which qmake
  - qmake -v
  - qmake wpnxm-servercontrolpanel.pro CONFIG+=release QMAKE_CC=$CC QMAKE_CXX=$CXX QMAKE_LIB_DIR=$QMAKE_LIB_DIR unix:LIBS += /opt/qt5/windows_32
  - gcc -v
  - gcc -dumpmachine
  - export CMAKE_OPTS="-DUSE_WERROR=ON"
  - make -j$NUM_CPU VERBOSE=1

notifications:
  email: false
  irc:
    channels:
      - "irc.freenode.org#koch"
    use_notice: true